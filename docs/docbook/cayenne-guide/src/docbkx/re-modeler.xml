<?xml version="1.0" encoding="UTF-8"?>
<!--
	Licensed to the Apache Software Foundation (ASF) under one or more
	contributor license agreements. See the NOTICE file distributed with
	this work for additional information regarding copyright ownership.
	The ASF licenses this file to you under the Apache License, Version
	2.0 (the "License"); you may not use this file except in compliance
	with the License. You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0 Unless required by
	applicable law or agreed to in writing, software distributed under the
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
	CONDITIONS OF ANY KIND, either express or implied. See the License for
	the specific language governing permissions and limitations under the
	License.
-->
<chapter version="5.0" xml:id="re-modeler" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ns="http://docbook.org/ns/docbook">
    <title>Reverse Engineering in Cayenne Modeler</title>

    <para>Alternative aproach to using <link linkend="what-is-cdbimport">cdbimport </link> is doing
        reverse engineering from <link linkend="running-cayennemodeler">Cayenne Modeler</link>.
        Currently modeler GUI doesn't support all features of ant/maven tasks but it suffice for
        general DB import. Especially it's a good place to quickly start working on your data model. </para>

    <para>
        You can find reverse engineering tool in main modeler menu
        <emphasis role="strong">
            <guimenu>Tools</guimenu> &gt; <guimenuitem>Reengineer Database Schema</guimenuitem>
        </emphasis>
    </para>

    <section xml:id="modeler-re-datasource">
        <title>DataSource selection</title>
        <para>First you should select DataSource. If you don't have any DataSource
            yet you can create one from this menu.
            <mediaobject>
                <imageobject condition="web">
                    <imagedata fileref="images/re-modeler-datasource-select.png"
                               format="PNG" scale="70"/>
                </imageobject>

                <textobject>
                    <phrase>Datasource selection dialog</phrase>
                </textobject>

                <caption>
                    <para>Datasource selection dialog.</para>
                </caption>
            </mediaobject>
        </para>
    </section>

    <section xml:id="modeler-re-options">
        <title>Reverse engineering options</title>
        <para>Once DataSource is selected you can proceed to reverse engineering
            options.
            <mediaobject>
                <imageobject condition="web">
                    <imagedata fileref="images/re-modeler-reverseengineering-dialog.png"
                               format="PNG" scale="70"/>
                </imageobject>

                <textobject>
                    <phrase>Reverse Engineering dialog</phrase>
                </textobject>

                <caption>
                    <para>Reverse Engineering dialog.</para>
                </caption>
            </mediaobject>
        </para>

        <para>
            Here is a list of options to tune what will be processed by reverse engineering:
            <itemizedlist>
                <listitem>
                    <para><emphasis role="strong">Select Catalog</emphasis>:
                        catalog to process
                        <note>
                            <para>You can only select one catalog. If you need to import multiple catalogs you need to run process several times.</para>
                        </note>
                    </para>
                </listitem>

                <listitem>
                    <para><emphasis role="strong">Table Name Pattern</emphasis>:
                        RegExp to filter tables. Default pattern <code>.*</code> includes all tables.
                    </para>
                </listitem>
                <listitem>
                    <para><emphasis role="strong">Procedure Name Pattern</emphasis>:
                        RegExp to filter procedures. Default pattern <code>.*</code> includes all stored procedures.
                    </para>
                </listitem>
                <listitem>
                    <para><emphasis role="strong">Naming Strategy</emphasis>:
                        Currently there is only one naming strategy available.
                        See ant/maven tools <link linkend="re-name-generator">documentation</link> for details about naming strategy.
                    </para>
                </listitem>
                <listitem>
                    <para><emphasis role="strong">Tables with Meaningful PK Pattern</emphasis>:
                        Comma separated list of RegExp's for tables that you want to have meaningful primary keys.
                        By default no meaningful PKs are created.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>
</chapter>
