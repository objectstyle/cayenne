<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~   Licensed to the Apache Software Foundation (ASF) under one
  ~  or more contributor license agreements.  See the NOTICE file
  ~  distributed with this work for additional information
  ~  regarding copyright ownership.  The ASF licenses this file
  ~  to you under the Apache License, Version 2.0 (the
  ~  "License"); you may not use this file except in compliance
  ~  with the License.  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.0" xml:id="ext-commit-log">
    <title>Commit log extension</title>
    <section>
        <title>Description</title>
        <para>The goal of this module is to capture commit changes and present them to interested parties in an easy-to-process format.</para>
    </section>
    <section>
        <title>Including in a project</title>
        <section>
            <title>Maven</title>
            <para>
                <programlisting language="xml">&lt;dependency>
    &lt;groupId>org.apache.cayenne&lt;/groupId>
    &lt;artifactId>cayenne-commitlog&lt;/artifactId>
    &lt;version><?eval ${project.version}?>&lt;/version>
&lt;/dependency></programlisting>
            </para>
        </section>
        <section>
            <title>Gradle</title>
            <para>
                <programlisting language="groovy">compile 'org.apache.cayenne:cayenne-commitlog:<?eval ${project.version}?>'</programlisting>
            </para>
        </section>
    </section>
    <section>
        <title>Usage</title>
        <para>
            In order to use <code>commitlog</code> module you need to perform three steps:
            <orderedlist>
                <listitem>
                    <para>Mark all entities which changes you are interested in with <code>@org.apache.cayenne.commitlog.CommitLog</code> annotation</para>
                    <programlisting language="java"><![CDATA[
@CommitLog(ignoredProperties = {"somePrivatePropertyToSkip"})
public class MyEntity extends _MyEntity {
    // ...
}]]></programlisting>
                </listitem>
                <listitem>
                    <para>
                        Implement <code>CommitLogListener</code> interface.
                        <programlisting language="java"><![CDATA[
public class MyCommitLogListener implements CommitLogListener {
    @Override
    public void onPostCommit(ObjectContext originatingContext, ChangeMap changes) {
        // ChangeMap will contain all information about changes happened in performed commit
        // this particular example will print IDs of all inserted objects
        changes.getUniqueChanges().stream()
            .filter(change -> change.getType() == ObjectChangeType.INSERT)
            .map(ObjectChange::getPostCommitId)
            .forEach(id -> System.out.println("Inserted new entity with id: " + id));
    }
}]]></programlisting>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Inject your listener into <code>ServerRuntime</code>
                        <programlisting language="java"><![CDATA[
ServerRuntime.builder()
        .addModule(CommitLogModule.extend()
                .addListener(MyCommitLogListener.class)
                .module())]]></programlisting>
                    </para>
                </listitem>
            </orderedlist>
        </para>
    </section>
</chapter>
