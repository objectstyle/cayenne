package org.apache.cayenne.testdo.return_types.auto;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import java.math.BigDecimal;
import java.util.Date;

/**
 * Class _ReturnTypesMap1 was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _ReturnTypesMap1 extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String AAAID_PK_COLUMN = "AAAID";

    public static final Property<Long> BIGINT_COLUMN = new Property<>("bigintColumn");
    public static final Property<Boolean> BIT_COLUMN = new Property<>("bitColumn");
    public static final Property<Boolean> BOOLEAN_COLUMN = new Property<>("booleanColumn");
    public static final Property<String> CHAR_COLUMN = new Property<>("charColumn");
    public static final Property<Date> DATE_COLUMN = new Property<>("dateColumn");
    public static final Property<BigDecimal> DECIMAL_COLUMN = new Property<>("decimalColumn");
    public static final Property<Double> DOUBLE_COLUMN = new Property<>("doubleColumn");
    public static final Property<Float> FLOAT_COLUMN = new Property<>("floatColumn");
    public static final Property<Integer> INTEGER_COLUMN = new Property<>("integerColumn");
    public static final Property<String> LONGNVARCHAR_COLUMN = new Property<>("longnvarcharColumn");
    public static final Property<String> LONGVARCHAR_COLUMN = new Property<>("longvarcharColumn");
    public static final Property<String> NCHAR_COLUMN = new Property<>("ncharColumn");
    public static final Property<BigDecimal> NUMERIC_COLUMN = new Property<>("numericColumn");
    public static final Property<String> NVARCHAR_COLUMN = new Property<>("nvarcharColumn");
    public static final Property<Float> REAL_COLUMN = new Property<>("realColumn");
    public static final Property<Short> SMALLINT_COLUMN = new Property<>("smallintColumn");
    public static final Property<Date> TIME_COLUMN = new Property<>("timeColumn");
    public static final Property<Date> TIMESTAMP_COLUMN = new Property<>("timestampColumn");
    public static final Property<Byte> TINYINT_COLUMN = new Property<>("tinyintColumn");
    public static final Property<String> VARCHAR_COLUMN = new Property<>("varcharColumn");

    public void setBigintColumn(Long bigintColumn) {
        writeProperty("bigintColumn", bigintColumn);
    }
    public Long getBigintColumn() {
        return (Long)readProperty("bigintColumn");
    }

    public void setBitColumn(Boolean bitColumn) {
        writeProperty("bitColumn", bitColumn);
    }
    public Boolean getBitColumn() {
        return (Boolean)readProperty("bitColumn");
    }

    public void setBooleanColumn(Boolean booleanColumn) {
        writeProperty("booleanColumn", booleanColumn);
    }
    public Boolean getBooleanColumn() {
        return (Boolean)readProperty("booleanColumn");
    }

    public void setCharColumn(String charColumn) {
        writeProperty("charColumn", charColumn);
    }
    public String getCharColumn() {
        return (String)readProperty("charColumn");
    }

    public void setDateColumn(Date dateColumn) {
        writeProperty("dateColumn", dateColumn);
    }
    public Date getDateColumn() {
        return (Date)readProperty("dateColumn");
    }

    public void setDecimalColumn(BigDecimal decimalColumn) {
        writeProperty("decimalColumn", decimalColumn);
    }
    public BigDecimal getDecimalColumn() {
        return (BigDecimal)readProperty("decimalColumn");
    }

    public void setDoubleColumn(Double doubleColumn) {
        writeProperty("doubleColumn", doubleColumn);
    }
    public Double getDoubleColumn() {
        return (Double)readProperty("doubleColumn");
    }

    public void setFloatColumn(Float floatColumn) {
        writeProperty("floatColumn", floatColumn);
    }
    public Float getFloatColumn() {
        return (Float)readProperty("floatColumn");
    }

    public void setIntegerColumn(Integer integerColumn) {
        writeProperty("integerColumn", integerColumn);
    }
    public Integer getIntegerColumn() {
        return (Integer)readProperty("integerColumn");
    }

    public void setLongnvarcharColumn(String longnvarcharColumn) {
        writeProperty("longnvarcharColumn", longnvarcharColumn);
    }
    public String getLongnvarcharColumn() {
        return (String)readProperty("longnvarcharColumn");
    }

    public void setLongvarcharColumn(String longvarcharColumn) {
        writeProperty("longvarcharColumn", longvarcharColumn);
    }
    public String getLongvarcharColumn() {
        return (String)readProperty("longvarcharColumn");
    }

    public void setNcharColumn(String ncharColumn) {
        writeProperty("ncharColumn", ncharColumn);
    }
    public String getNcharColumn() {
        return (String)readProperty("ncharColumn");
    }

    public void setNumericColumn(BigDecimal numericColumn) {
        writeProperty("numericColumn", numericColumn);
    }
    public BigDecimal getNumericColumn() {
        return (BigDecimal)readProperty("numericColumn");
    }

    public void setNvarcharColumn(String nvarcharColumn) {
        writeProperty("nvarcharColumn", nvarcharColumn);
    }
    public String getNvarcharColumn() {
        return (String)readProperty("nvarcharColumn");
    }

    public void setRealColumn(Float realColumn) {
        writeProperty("realColumn", realColumn);
    }
    public Float getRealColumn() {
        return (Float)readProperty("realColumn");
    }

    public void setSmallintColumn(Short smallintColumn) {
        writeProperty("smallintColumn", smallintColumn);
    }
    public Short getSmallintColumn() {
        return (Short)readProperty("smallintColumn");
    }

    public void setTimeColumn(Date timeColumn) {
        writeProperty("timeColumn", timeColumn);
    }
    public Date getTimeColumn() {
        return (Date)readProperty("timeColumn");
    }

    public void setTimestampColumn(Date timestampColumn) {
        writeProperty("timestampColumn", timestampColumn);
    }
    public Date getTimestampColumn() {
        return (Date)readProperty("timestampColumn");
    }

    public void setTinyintColumn(Byte tinyintColumn) {
        writeProperty("tinyintColumn", tinyintColumn);
    }
    public Byte getTinyintColumn() {
        return (Byte)readProperty("tinyintColumn");
    }

    public void setVarcharColumn(String varcharColumn) {
        writeProperty("varcharColumn", varcharColumn);
    }
    public String getVarcharColumn() {
        return (String)readProperty("varcharColumn");
    }

}
