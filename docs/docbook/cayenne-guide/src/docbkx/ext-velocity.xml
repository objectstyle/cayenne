<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~   Licensed to the Apache Software Foundation (ASF) under one
  ~  or more contributor license agreements.  See the NOTICE file
  ~  distributed with this work for additional information
  ~  regarding copyright ownership.  The ASF licenses this file
  ~  to you under the Apache License, Version 2.0 (the
  ~  "License"); you may not use this file except in compliance
  ~  with the License.  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.0" xml:id="ext-velocity">
    <title>Apache Velocity extension</title>
    <section>
        <title>Description</title>
        <para>This module enables usage of full featured Apache Velocity templates in <code>org.apache.cayenne.query.SQLTemplate</code>
        queries.</para>
    </section>
    <section>
        <title>Including in a project</title>
        <section>
            <title>Maven</title>
            <para>
                <programlisting language="xml">&lt;dependency>
    &lt;groupId>org.apache.cayenne&lt;/groupId>
    &lt;artifactId>cayenne-velocity&lt;/artifactId>
    &lt;version><?eval ${project.version}?>&lt;/version>
&lt;/dependency></programlisting>
            </para>
        </section>
        <section>
            <title>Gradle</title>
            <para>
                <programlisting language="groovy">compile 'org.apache.cayenne:cayenne-velocity:<?eval ${project.version}?>'</programlisting>
            </para>
        </section>
    </section>
    <section>
        <title>Usage</title>
        <para>
            This module doesn't require any additional setup.
        </para>
        <para>
            In addition of directives mentioned in <link linkend="sqltemplate-bind-directive">this</link> chapter, this module enables <code>#chain</code> and <code>#chunk</code>
            directives.
        </para>
        <para><code>#chain</code> and <code>#chunk</code> directives are used for
            conditional inclusion of SQL code. They are used together with
            <code>#chain</code> wrapping multiple <code>#chunks</code>. A chunk
            evaluates its parameter expression and if it is NULL suppresses rendering of the
            enclosed SQL block. A chain renders its prefix and its chunks joined by the
            operator. If all the chunks are suppressed, the chain itself is suppressed. This
            allows to work with otherwise hard to script SQL semantics. E.g. a WHERE clause
            can contain multiple conditions joined with AND or OR. Application code would
            like to exclude a condition if its right-hand parameter is not present (similar
            to Expression pruning discussed above). If all conditions are excluded, the
            entire WHERE clause should be excluded. chain/chunk allows to do that.</para>
        <para>
            <emphasis role="italic"
            >Semantics</emphasis>:<programlisting language="java">#chain(operator) ... #end
#chain(operator prefix) ... #end
#chunk() ... #end
#chunk(param) ... #end </programlisting></para>
        <para><emphasis role="italic">Full
            example:</emphasis><programlisting language="java">#chain('OR' 'WHERE')
    #chunk($name) NAME LIKE #bind($name) #end
    #chunk($id) ARTIST_ID > #bind($id) #end
#end" </programlisting></para>
    </section>
</chapter>
